{"version":3,"sources":["App.js","index.js"],"names":["getPeopleFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","peopleFromServer","wrap","_context","prev","next","fetch","sent","json","abrupt","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","join","stop","apply","this","arguments","App","state","people","setState","react_default","createElement","className","length","App_PeopleTable","React","Component","PeopleTable","_ref2","App_Person","key","Person","_ref3","sex","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"+PAGMA,SAAmB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACb,mBADaF,EAAAE,KAAA,EAEHC,MADV,oBADa,cAEpBN,EAFoBG,EAAAI,KAAAJ,EAAAE,KAAA,EAGKL,EAASQ,OAHd,cAGpBP,EAHoBE,EAAAI,KAAAJ,EAAAM,OAAA,SAKnBR,EAAiBS,IAAI,SAACC,EAAQC,GAAT,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAA,CAC1BoB,GAAIF,EAAQ,GACTD,EAFuB,CAG1BI,IAAKJ,EAAOK,KAAOL,EAAOM,KAC1BC,QAASC,KAAKC,KAAKT,EAAOK,KAAO,KACjCK,SAAUpB,EACPqB,OAAO,SAAAC,GAAK,OACXA,EAAMC,SAAWb,EAAOc,MAAQF,EAAMG,SAAWf,EAAOc,OAEzDf,IAAI,SAAAa,GAAK,OAAIA,EAAME,OAAME,KAAK,WAdT,wBAAAxB,EAAAyB,SAAA7B,MAAH,yBAAAN,EAAAoC,MAAAC,KAAAC,YAAA,IAkBnBC,6MACJC,MAAQ,CACNC,OAAQ,qNAIa1C,WAAf0C,SAENJ,KAAKK,SAAS,CAAED,8IAGT,IACCA,EAAWJ,KAAKG,MAAhBC,OAER,OACEE,EAAAvC,EAAAwC,cAAA,OAAKC,UAAU,OACbF,EAAAvC,EAAAwC,cAAA,+BACqBH,EAAOK,QAE5BH,EAAAvC,EAAAwC,cAACG,EAAD,CAAaN,OAAQA,YAnBXO,IAAMC,WAyBlBC,EAAc,SAAAC,GAAA,IAAGV,EAAHU,EAAGV,OAAH,OAClBE,EAAAvC,EAAAwC,cAAA,SAAOC,UAAU,eACfF,EAAAvC,EAAAwC,cAAA,aACED,EAAAvC,EAAAwC,cAAA,UACED,EAAAvC,EAAAwC,cAAA,gBACAD,EAAAvC,EAAAwC,cAAA,kBACAD,EAAAvC,EAAAwC,cAAA,iBACAD,EAAAvC,EAAAwC,cAAA,kBACAD,EAAAvC,EAAAwC,cAAA,kBACAD,EAAAvC,EAAAwC,cAAA,oBACAD,EAAAvC,EAAAwC,cAAA,oBACAD,EAAAvC,EAAAwC,cAAA,iBACAD,EAAAvC,EAAAwC,cAAA,qBACAD,EAAAvC,EAAAwC,cAAA,wBAGJD,EAAAvC,EAAAwC,cAAA,aACGH,EAAOxB,IAAI,SAAAC,GAAM,OAChByB,EAAAvC,EAAAwC,cAACQ,EAAD,CAAQlC,OAAQA,EAAQmC,IAAKnC,EAAOG,UAMtCiC,EAAS,SAAAC,GAAA,IAAGrC,EAAHqC,EAAGrC,OAAH,OACbyB,EAAAvC,EAAAwC,cAAA,MAAIS,IAAKnC,EAAOG,IACdsB,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOG,IACZsB,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOc,MACZW,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOsC,KACZb,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOM,MACZmB,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOK,MACZoB,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOe,QACZU,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOa,QACZY,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOI,KACZqB,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOO,SACZkB,EAAAvC,EAAAwC,cAAA,UAAK1B,EAAOU,YAGDW,IC/EfkB,IAASC,OAAOf,EAAAvC,EAAAwC,cAACe,EAAD,CAAKC,KAAM,MAASC,SAASC,eAAe","file":"static/js/main.b99128e1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst getPeopleFromServer = async() => {\n  const link = '/api/people.json';\n  const response = await fetch(link);\n  const peopleFromServer = await response.json();\n\n  return peopleFromServer.map((person, index) => ({\n    id: index + 1,\n    ...person,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: peopleFromServer\n      .filter(child => (\n        child.father === person.name || child.mother === person.name\n      ))\n      .map(child => child.name).join('; '),\n  }));\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n  };\n\n  async componentDidMount() {\n    const people = await getPeopleFromServer();\n\n    this.setState({ people });\n  }\n\n  render() {\n    const { people } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Number of People: {people.length}\n        </h1>\n        <PeopleTable people={people} />\n      </div>\n    );\n  }\n}\n\nconst PeopleTable = ({ people }) => (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n        <th>Age</th>\n        <th>Century</th>\n        <th>Children</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <Person person={person} key={person.id} />\n      ))}\n    </tbody>\n  </table>\n);\n\nconst Person = ({ person }) => (\n  <tr key={person.id}>\n    <td>{person.id}</td>\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td>{person.age}</td>\n    <td>{person.century}</td>\n    <td>{person.children}</td>\n  </tr>\n);\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}